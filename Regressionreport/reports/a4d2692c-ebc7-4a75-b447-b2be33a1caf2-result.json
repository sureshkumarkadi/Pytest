{"name": "test_openbrowser1", "status": "broken", "statusDetails": {"message": "TypeError: print_exception() missing 3 required positional arguments: 'etype', 'value', and 'tb'", "trace": "self = <test_logintest00001.openbrowser testMethod=test_openbrowser1>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_openbrowser1(self):\n      try:\n        #print('enter')\n        browser = reg.openbrowser()\n    \n        reg.inputurl(browser)\n        gettitle = browser.title\n        #print(gettitle)\n>       self.assertEqual(gettitle, 'Google1')\n\ntest_logintest00001.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_logintest00001.openbrowser testMethod=test_openbrowser1>, first = 'Google', second = 'Google1', msg = None\n\n    def assertEqual(self, first, second, msg=None):\n        \"\"\"Fail if the two objects are unequal as determined by the '=='\n           operator.\n        \"\"\"\n        assertion_func = self._getAssertEqualityFunc(first, second)\n>       assertion_func(first, second, msg=msg)\n\nd:\\python\\lib\\unittest\\case.py:852: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_logintest00001.openbrowser testMethod=test_openbrowser1>, first = 'Google', second = 'Google1', msg = None\n\n    def assertMultiLineEqual(self, first, second, msg=None):\n        \"\"\"Assert that two multi-line strings are equal.\"\"\"\n        self.assertIsInstance(first, str, 'First argument is not a string')\n        self.assertIsInstance(second, str, 'Second argument is not a string')\n    \n        if first != second:\n            # don't use difflib if the strings are too long\n            if (len(first) > self._diffThreshold or\n                len(second) > self._diffThreshold):\n                self._baseAssertEqual(first, second, msg)\n            firstlines = first.splitlines(keepends=True)\n            secondlines = second.splitlines(keepends=True)\n            if len(firstlines) == 1 and first.strip('\\r\\n') == first:\n                firstlines = [first + '\\n']\n                secondlines = [second + '\\n']\n            standardMsg = '%s != %s' % _common_shorten_repr(first, second)\n            diff = '\\n' + ''.join(difflib.ndiff(firstlines, secondlines))\n            standardMsg = self._truncateMessage(standardMsg, diff)\n>           self.fail(self._formatMessage(msg, standardMsg))\n\nd:\\python\\lib\\unittest\\case.py:1233: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_logintest00001.openbrowser testMethod=test_openbrowser1>, msg = \"'Google' != 'Google1'\\n- Google\\n+ Google1\\n?       +\\n\"\n\n    def fail(self, msg=None):\n        \"\"\"Fail immediately, with the given message.\"\"\"\n>       raise self.failureException(msg)\nE       AssertionError: 'Google' != 'Google1'\nE       - Google\nE       + Google1\nE       ?       +\n\nd:\\python\\lib\\unittest\\case.py:693: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_logintest00001.openbrowser testMethod=test_openbrowser1>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_openbrowser1(self):\n      try:\n        #print('enter')\n        browser = reg.openbrowser()\n    \n        reg.inputurl(browser)\n        gettitle = browser.title\n        #print(gettitle)\n        self.assertEqual(gettitle, 'Google1')\n            #print(\"pass\")\n      except Exception:\n>       traceback.print_exception()\nE       TypeError: print_exception() missing 3 required positional arguments: 'etype', 'value', and 'tb'\n\ntest_logintest00001.py:63: TypeError"}, "start": 1600248637559, "stop": 1600248649036, "uuid": "bcbe9f41-4f59-4d6e-b769-e645f6bbc205", "historyId": "4fcdea1a296aa082195103c9dfb51a49", "testCaseId": "1d1b45f55f6a313234aa13c5df2c427e", "fullName": "test_logintest00001.openbrowser#test_openbrowser1", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_logintest00001"}, {"name": "subSuite", "value": "openbrowser"}, {"name": "host", "value": "LAP-18-19-281"}, {"name": "thread", "value": "43536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_logintest00001"}]}